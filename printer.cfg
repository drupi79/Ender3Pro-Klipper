# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include timelapse.cfg]
[include KAMP_Settings.cfg]
[include moonraker_obico_macros.cfg]
[include aux_fan.cfg]
[include start.cfg]

###Sensors###

[bltouch] # Comment out if not using a BL/CR-Touch
sensor_pin: ^PB1 # Comment out if not using a BL/CR-Touch
control_pin: PB0 # Comment out if not using a BL/CR-Touch
x_offset: 0 # Enter your own value here, Comment out if not using a BL/CR-Touch
y_offset: -57  # Enter your own value here, Comment out if not using a BL/CR-Touch
#z_offset: 3.0

#[BDsensor] 
# Don't use aliases for the board pins
#rt_sample_time:16 # ms
#sda_pin: ^PB1 # example of connecting to main board Creality V4.2.7
#scl_pin: PB0
#delay: 20 # 20us per pulse, this value should be >=18 but must be below 30
#z_offset:0 # this `z_offset` must be set to 0. 
#z_adjust:0.0 # z axis adjustment, replace the z_offset function. within -0.3 to 0.3mm
#x_offset: 0
#y_offset: -21.3
#no_stop_probe: # fast probe that the toolhead will not stop at the probe point,disable it by commenting out.
#position_endstop: 0.5 #the Z axis will be triggered after it measured the distance is below this value(mm) while homing z, recommend value is 0.5~1.0
#speed:0.8 # this speed only works for the z tilt and PROBE_ACCURACY command.
#collision_homing:0 #  set it 1 to enable homing with nozzle collision sensing.
#collision_calibrate:0 # set it 1 to enable auto calibrate BDsensor with nozzle collision sensing.

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

###Filamnet Sensor###

#[filament_switch_sensor Filament_runout_sensor]
#pause_on_runout: True
#runout_gcode:
#  G91
#  G1 Z20 F900      # Raise Z away from print
#  G90
#  G1 X245 Y218.5 F5000 # Move to purge area
#  G91
#  G1 E-450 F600 # Retract 450mm of filament
#  G90
#insert_gcode:
#  G4 P10000 # Pause for 10 seconds
#  G1 E150 F400 # Prime the nozzle
#switch_pin: PC6 # Pin that the sensor is connected to

###Stepper Drivers###

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 245
homing_speed: 50

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 240
homing_speed: 50

[stepper_z]
step_pin: PB5
dir_pin: PB6
enable_pin: !PC3
microsteps: 16
#rotation_distance: 8
rotation_distance: 40
gear_ratio: 80:16
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree
endstop_pin: probe:z_virtual_endstop # Comment out if not using BL/CR-Touch
#endstop_pin: ^PA7 # Uncomment if using the z-endstop
#position_endstop: 0.5 # Uncomment if using the z-endstop
position_max: 250
position_min: -6
homing_speed: 5
#second_homing_speed: 1  #set this to 3 if homing with collision
#homing_retract_speed: 2
#homing_retract_dist:5

###Extruder###

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: !PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.711 # profile default 33.500
#gear_ratio: 57:11
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.08
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_kp: 24.545
#pid_ki: 1.136
#pid_kd: 132.544
min_temp: 0
max_temp: 300

###Print Bed###

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_kp: 73.035
#pid_ki: 1.902
#pid_kd: 701.138
min_temp: 0
max_temp: 130

[bed_mesh]
speed: 120
horizontal_move_z: 7
zero_reference_position: 117, 117 # Set this value to be the same as home_xy_position that is in the section safe_z_home
#mesh_min: 30,22
mesh_min: 20,20
#mesh_max: 200,197
mesh_max: 190,190
probe_count: 6,6
algorithm: bicubic


[screws_tilt_adjust]
screw1: 29,102
screw1_name: front left screw
screw2: 199,102
screw2_name: front right screw
screw3: 199,235
screw3_name: rear right screw
screw4: 29,235
screw4_name: rear left screw
horizontal_move_z: 7
speed: 200
screw_thread: CW-M4 # Use CW for Clowise and CCW for Counter Clockwise

###Fans###

[fan]
pin: PA0

###MCU###

[mcu]
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

###Kinematics###

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 5000
max_accel_to_decel: 3500
max_z_velocity: 5
square_corner_velocity: 5.0
max_z_accel: 100

[safe_z_home]
home_xy_position: 117,117 # Change coordinates to the center of your print bed
speed: 50
z_hop: 7 # Move up 1mm
z_hop_speed: 5

###Input Shaper###

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example

[input_shaper]
#shaper_freq_x: 36.8
#shaper_type_x: mzv
#shaper_freq_y: 44.0
#shaper_type_y: mzv

[exclude_object]

[force_move] 
enable_force_move: false   # required by the command SET_KINEMATIC_POSITION in the calibration step.

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

###Macros###

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        #M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro PID_BED]
description: Start Bed PID
gcode:
  G90
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G1 Z10 F600
  M106
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(70)}
  M107
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F20000


[gcode_macro PID_HOTEND]
description: Start Hotend PID
gcode:
  G90
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G1 Z10 F600
  M106
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(250)}
  M107
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F20000
  WAIT_TEMP_START

#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    PRINT_END
#    BASE_CANCEL_PRINT

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.405
#*# pid_ki = 1.229
#*# pid_kd = 111.466
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.483
#*# pid_ki = 1.888
#*# pid_kd = 695.835
#*#
#*# [input_shaper]
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 51.0
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 41.8
#*#
#*# [bltouch]
#*# z_offset = 0.290
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.046711, 0.003289, 0.005789
#*# 	  0.005789, 0.000789, 0.008289
#*# 	  -0.019211, -0.004211, -0.021711
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 78.1653
#*# max_x = 141.8253
#*# min_y = 79.0141
#*# max_y = 140.9741
